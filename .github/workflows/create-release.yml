name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install tomli
        run: pip install tomli

      - name: Extract Version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python -c "
          import tomli
          with open('pyproject.toml', 'rb') as f:
            pyproject = tomli.load(f)
            print(pyproject['project']['version'])
          ")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check Existing Releases
        id: check_releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          str = ${{ GH_TOKE }}
          echo ${#str}
          # Check how many releases exist with this version
          EXISTING_RELEASES=$(gh release list | grep "${{ steps.get_version.outputs.version }}" | wc -l)

          if [ "$EXISTING_RELEASES" -eq 0 ]; then
            echo "release_tag=${{ steps.get_version.outputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "release_tag=${{ steps.get_version.outputs.version }}-rev-$((EXISTING_RELEASES + 1))" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.check_releases.outputs.release_tag }}
          generate_release_notes: true
